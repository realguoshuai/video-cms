<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zhiyou100.dao.VideoDao">

	<resultMap type="videoDO" id="listObject">
		<id property="id" column="id" />
		<result property="name" column="video_name" />
		<result property="length" column="length" />
		<result property="playCount" column="play_count" />
		<association property="course" javaType="courseDO">
			<result property="name" column="course_name" />
		</association>
		<association property="speaker" javaType="speakerDO">
			<result property="name" column="speaker_name" />
		</association>
		<association property="subject" javaType="subjectDO">
			<result property="name" column="subject_name" />
		</association>
	</resultMap>

	<select id="listObject" resultMap="listObject">
		SELECT
		v.id
		, v.name video_name
		, c.name course_name
		, s.name speaker_name
		, a.name subject_name
		,
		v.length
		, v.play_count
		FROM
		video
		v LEFT JOIN
		course c ON v.course_id =
		c.id
		LEFT JOIN speaker s ON
		v.speaker_id =
		s.id
		LEFT JOIN subject a ON
		c.subject_id = a.id
		WHERE
		v.status = 0
	</select>

	<select id="listObjectByQuery" resultMap="listObject">
		SELECT
		v.id
		, v.name video_name
		, c.name course_name
		, s.name speaker_name
		, a.name subject_name
		, v.length
		, v.play_count
		FROM
		video
		v LEFT JOIN
		course c ON v.course_id =
		c.id
		LEFT JOIN speaker s ON
		v.speaker_id =
		s.id
		LEFT JOIN subject a ON
		c.subject_id = a.id
		<where>
			<if test="keywords != null">
				<foreach collection="keywords" item="item" open="(" close=")"
					separator="OR">
					v.name LIKE '%${item}%'
				</foreach>
			</if>

			<if test="speakerId != null and speakerId != 0">
				AND v.speaker_id = #{speakerId}
			</if>

			<if test="courseId != null and courseId != 0">
				AND v.course_id = #{courseId}
			</if>

			AND v.status = 0
		</where>
		<if test="sort != null and order != null">
			ORDER BY ${sort} ${order}
		</if>
		LIMIT #{offset}, #{limit}
	</select>

	<select id="countObjectByQuery" resultType="int">
		SELECT
		count(*)
		FROM
		video
		v LEFT JOIN
		course c ON v.course_id =
		c.id
		LEFT
		JOIN speaker s ON
		v.speaker_id =
		s.id
		LEFT JOIN subject a ON
		c.subject_id
		= a.id
		<where>
			<if test="keywords != null">
				<foreach collection="keywords" item="item" open="(" close=")"
					separator="OR">
					v.name LIKE '%${item}%'
				</foreach>
			</if>

			<if test="speakerId != null and speakerId != 0">
				AND v.speaker_id = #{speakerId}
			</if>

			<if test="courseId != null">
				AND v.course_id = #{courseId}
			</if>

			AND v.status = 0
		</where>
	</select>

	<insert id="insertObject">
		INSERT INTO
		video(name, describe, length, play_count,
		cover_url, video_url, course_id, speaker_id)
		VALUES
		(#{name},
		#{describe}, #{length}, #{playCount}, #{coverUrl}, #{videoUrl},
		#{courseId}, #{speakerId})
	</insert>

	<update id="updateObject">
		UPDATE
		video
		<set>
			<if test="name != null">
				name = #{name},
			</if>

			<if test="describe != null">
				job = #{describe},
			</if>

			<if test="length != null">
				length = #{length},
			</if>

			<if test="playCount != null">
				play_count = #{playCount},
			</if>

			<if test="coverUrl != null">
				cover_url = #{coverUrl},
			</if>

			<if test="videoUrl != null">
				video_url = #{videoUrl},
			</if>

			<if test="courseId != null">
				course_id = #{courseId},
			</if>

			<if test="speakerId != null">
				speaker_id = #{speakerId},
			</if>

			<if test="status != null">
				status = #{status},
			</if>
		</set>
		WHERE
		id = #{id}
	</update>

	<update id="updateCourseIdNull">
		UPDATE
		video
		SET
		course_id = null
		<where>
			course_id IN
			<foreach collection="arrays" item="item" open="(" close=")" separator=",">
				${item}
			</foreach>
		</where>
	</update>

	<update id="updateSpeakerIdNull">
		UPDATE
		video
		SET
		speaker_id = null
		<where>
			speaker_id IN
			<foreach collection="arrays" item="item" open="(" close=")" separator=",">
				${item}
			</foreach>
		</where>
	</update>
</mapper>